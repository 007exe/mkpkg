d_echo() {
  if [ "${MKPKG_DEBUG}" == "ON" ]; then 
     echo -e "\e[42m===[MKPKG_DEBUG]=== : $1\e[0m"
  fi
}

#Loading message file
if [ -f "${MKPKG_DIR}/mkpkg.messages" ]; then 
   . "${MKPKG_DIR}/mkpkg.messages"
else
   echo "Error loading mkpkg.messages file from '${MKPKG_DIR}' !"
   exit 1
fi

#Loading normal messages
if [ -f "${MKPKG_DIR}/mkpkg.n_messages" ]; then
   . "${MKPKG_DIR}/mkpkg.n_messages"
else
   echo "Error loading mkpkg.n_messages file from '${MKPKG_DIR}' !"
   exit 1
fi

find_package_directory() {
  local result_func="$1"
  local pkg_dir="$2"
  local pkg_arch="$3"
  [ -z "${pkg_arch}" ] && pkg_arch="*"
  cd "${pkg_dir}"
  for n in ${pkg_arch} ; do
      for i in $(find . -name "${newdep_name}-[0-9]*-${n}-[0-9]*.txz") ; do
          eval ${result_func}="$i"
          return
      done
  done
  eval ${result_func}=""

  return 0
}

check_dir_whitelist() {
  local DIR=$(echo ${1} | sed 's/^\.//g')
  local WHITELIST="/lib /usr/lib /usr/local/lib /usr/i486-slackware-linux/lib /usr/i686-slackware-linux/lib"
  local bad=1
  for check in ${WHITELIST} ; do
      local zzz=$(echo ${DIR} | sed s:^${check}::g)
      if [ "${DIR}" != "${zzz}" ] ; then
         bad=0
      fi
  done
  if [ "${bad}" = "1" ] ; then
     echo "Skipping files from ${DIR}"
  fi

 return ${bad}
}

#Query function
ask_yn() {
  local pressed_key
  if [ -n "$1" ] ; then
     message_text=`show_message $1`
     read -n 1 -p "${message_text} (y/[a]): " pressed_key
  else
     read -n 1 pressed_key
  fi
  echo "" 1>&2
  if [ "${pressed_key}" = "y" ] ; then
     return 0
  else
     return 1
  fi
}